services:
  postgres:
    image: postgres:14
    container_name: achievement-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-postgres}
      interval: 2s
      timeout: 3s
      retries: 40
    ports:
      - "5432:5432"

  init-db:
    profiles: ["init"]
    build:
      context: .
      dockerfile: Dockerfile
    container_name: achievement-init
    command: python src/database/init_db.py
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: achievement-web
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    command: streamlit run src/main.py

networks:
  default:
    name: achievement-network

volumes:
  postgres_data:
    name: achievement-postgres_data